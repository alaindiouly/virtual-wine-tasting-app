{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DominantFlavors({\n  flavors,\n  grape,\n  wineDB\n}) {\n  _s();\n\n  const [fruitFlavors, setFruitFlavors] = useState({});\n  const [dryFruitFlavors, setDryFruitFlavors] = useState({});\n  const [floralFlavors, setFloralFlavors] = useState({});\n  const [herbalFlavors, setHerbalFlavors] = useState({});\n  const [spiceFlavors, setSpiceFlavors] = useState({});\n  const [earthFlavors, setEarthFlavors] = useState({});\n  const [otherFlavors, setOtherFlavors] = useState({});\n\n  function updateFruitFlavors(fruit) {\n    if (fruitFlavors[fruit] === fruit) {\n      delete fruitFlavors[fruit];\n      setFruitFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setFruitFlavors(prev => ({ ...prev,\n        [fruit]: fruit\n      }));\n    }\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    if (dryFruitFlavors[dryFruit] === dryFruit) {\n      delete dryFruitFlavors[dryFruit];\n      setDryFruitFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setDryFruitFlavors(prev => ({ ...prev,\n        [dryFruit]: dryFruit\n      }));\n    }\n  }\n\n  function updateFloralFlavors(floral) {\n    if (floralFlavors[floral] === floral) {\n      delete floralFlavors[floral];\n      setFloralFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setFloralFlavors(prev => ({ ...prev,\n        [floral]: floral\n      }));\n    }\n  }\n\n  function updateHerbalFlavors(herbal) {\n    if (herbalFlavors[herbal] === herbal) {\n      delete herbalFlavors[herbal];\n      setHerbalFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setHerbalFlavors(prev => ({ ...prev,\n        [herbal]: herbal\n      }));\n    }\n  }\n\n  function updateSpiceFlavors(spice) {\n    if (spiceFlavors[spice] === spice) {\n      delete spiceFlavors[spice];\n      setSpiceFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setSpiceFlavors(prev => ({ ...prev,\n        [spice]: spice\n      }));\n    }\n  }\n\n  function updateEarthFlavors(earth) {\n    if (earthFlavors[earth] === earth) {\n      delete earthFlavors[earth];\n      setEarthFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setEarthFlavors(prev => ({ ...prev,\n        [earth]: earth\n      }));\n    }\n  }\n\n  function updateOtherFlavors(other) {\n    if (otherFlavors[other] === other) {\n      delete otherFlavors[other];\n      setOtherFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setOtherFlavors(prev => ({ ...prev,\n        [other]: other\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"possible flavors in \", grape]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Fruits:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"possible__flavors\",\n      children: wineDB[grape].possibleFlavors.fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateFruitFlavors(fruit),\n        className: (fruitFlavors[fruit] === fruit ? 'toggled__flavor' : '') + ' flavor__box',\n        children: fruit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 93\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Dry Fruits: \", wineDB[grape].possibleFlavors.dryFruits.map(dryFruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateDryFruitFlavors(dryFruit),\n        className: dryFruitFlavors[dryFruit] === dryFruit ? 'toggled__flavor' : '',\n        children: dryFruit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 81\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Floral: \", wineDB[grape].possibleFlavors.florals.map(floral => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateFloralFlavors(floral),\n        className: floralFlavors[floral] === floral ? 'toggled__flavor' : '',\n        children: floral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 73\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Herbs: \", wineDB[grape].possibleFlavors.herbs.map(herb => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateHerbalFlavors(herb),\n        className: herbalFlavors[herb] === herb ? 'toggled__flavor' : '',\n        children: herb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 68\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Spices: \", wineDB[grape].possibleFlavors.spices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateSpiceFlavors(spice),\n        className: spiceFlavors[spice] === spice ? 'toggled__flavor' : '',\n        children: spice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 71\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Earth: \", wineDB[grape].possibleFlavors.earthFlavors.map(earthFlavor => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateEarthFlavors(earthFlavor),\n        className: earthFlavors[earthFlavor] === earthFlavor ? 'toggled__flavor' : '',\n        children: earthFlavor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 82\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Other: \", wineDB[grape].possibleFlavors.others.map(other => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateOtherFlavors(other),\n        className: otherFlavors[other] === other ? 'toggled__flavor' : '',\n        children: other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 70\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(fruitFlavors),\n      children: \"show fruit flavors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 11\n  }, this);\n}\n\n_s(DominantFlavors, \"WyUWltKkkPDDWtdmykxjnRwn2b4=\");\n\n_c = DominantFlavors;\n\nvar _c;\n\n$RefreshReg$(_c, \"DominantFlavors\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js"],"names":["useState","DominantFlavors","flavors","grape","wineDB","fruitFlavors","setFruitFlavors","dryFruitFlavors","setDryFruitFlavors","floralFlavors","setFloralFlavors","herbalFlavors","setHerbalFlavors","spiceFlavors","setSpiceFlavors","earthFlavors","setEarthFlavors","otherFlavors","setOtherFlavors","updateFruitFlavors","fruit","prev","updateDryFruitFlavors","dryFruit","updateFloralFlavors","floral","updateHerbalFlavors","herbal","updateSpiceFlavors","spice","updateEarthFlavors","earth","updateOtherFlavors","other","possibleFlavors","fruits","map","dryFruits","florals","herbs","herb","spices","earthFlavor","others","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nexport default function DominantFlavors({ flavors, grape, wineDB }) {\n\n  const [fruitFlavors, setFruitFlavors] = useState({})\n  const [dryFruitFlavors, setDryFruitFlavors] = useState({})\n  const [floralFlavors, setFloralFlavors] = useState({})\n  const [herbalFlavors, setHerbalFlavors] = useState({})\n  const [spiceFlavors, setSpiceFlavors] = useState({})\n  const [earthFlavors, setEarthFlavors] = useState({})\n  const [otherFlavors, setOtherFlavors] = useState({})\n\n  function updateFruitFlavors(fruit) {\n    if (fruitFlavors[fruit] === fruit) {\n      delete fruitFlavors[fruit]\n      setFruitFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setFruitFlavors(prev => ({\n        ...prev,\n        [fruit]: fruit\n      }))\n    }\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    if (dryFruitFlavors[dryFruit] === dryFruit) {\n      delete dryFruitFlavors[dryFruit]\n      setDryFruitFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setDryFruitFlavors(prev => ({\n        ...prev,\n        [dryFruit]: dryFruit\n      }))\n    }\n  }\n\n  function updateFloralFlavors(floral) {\n    if (floralFlavors[floral] === floral) {\n      delete floralFlavors[floral]\n      setFloralFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setFloralFlavors(prev => ({\n        ...prev,\n        [floral]: floral\n      }))\n    }\n  }\n\n  function updateHerbalFlavors(herbal) {\n    if (herbalFlavors[herbal] === herbal) {\n      delete herbalFlavors[herbal]\n      setHerbalFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setHerbalFlavors(prev => ({\n        ...prev,\n        [herbal]: herbal\n      }))\n    }\n  }\n\n  function updateSpiceFlavors(spice) {\n    if (spiceFlavors[spice] === spice) {\n      delete spiceFlavors[spice]\n      setSpiceFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setSpiceFlavors(prev => ({\n        ...prev,\n        [spice]: spice\n      }))\n    }\n  }\n\n  function updateEarthFlavors(earth) {\n    if (earthFlavors[earth] === earth) {\n      delete earthFlavors[earth]\n      setEarthFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setEarthFlavors(prev => ({\n        ...prev,\n        [earth]: earth\n      }))\n    }\n  }\n\n  function updateOtherFlavors(other) {\n    if (otherFlavors[other] === other) {\n      delete otherFlavors[other]\n      setOtherFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setOtherFlavors(prev => ({\n        ...prev,\n        [other]: other\n      }))\n    }\n  }\n\n  return (<div>\n\n    <div><h2>possible flavors in {grape}</h2></div>\n\n    <h3>Fruits:</h3>\n    <div className='possible__flavors'>{wineDB[grape].possibleFlavors.fruits.map((fruit) => <div\n      onClick={() => updateFruitFlavors(fruit)}\n      className={(fruitFlavors[fruit] === fruit ? 'toggled__flavor' : '') + ' flavor__box'} >{fruit}</div>)}\n    </div>\n\n    <div>Dry Fruits: {wineDB[grape].possibleFlavors.dryFruits.map((dryFruit) => <div\n      onClick={() => updateDryFruitFlavors(dryFruit)}\n      className={dryFruitFlavors[dryFruit] === dryFruit ? 'toggled__flavor' : ''}>{dryFruit}</div>)}\n    </div>\n\n    <div>Floral: {wineDB[grape].possibleFlavors.florals.map((floral) => <div\n      onClick={() => updateFloralFlavors(floral)}\n      className={floralFlavors[floral] === floral ? 'toggled__flavor' : ''}>{floral}</div>)}\n    </div>\n\n    <div>Herbs: {wineDB[grape].possibleFlavors.herbs.map((herb) => <div\n      onClick={() => updateHerbalFlavors(herb)}\n      className={herbalFlavors[herb] === herb ? 'toggled__flavor' : ''}>{herb}</div>)}\n    </div>\n\n    <div>Spices: {wineDB[grape].possibleFlavors.spices.map((spice) => <div\n      onClick={() => updateSpiceFlavors(spice)}\n      className={spiceFlavors[spice] === spice ? 'toggled__flavor' : ''}>{spice}</div>)}\n    </div>\n\n    <div>Earth: {wineDB[grape].possibleFlavors.earthFlavors.map((earthFlavor) => <div\n      onClick={() => updateEarthFlavors(earthFlavor)}\n      className={earthFlavors[earthFlavor] === earthFlavor ? 'toggled__flavor' : ''}>{earthFlavor}</div>)}\n    </div>\n\n    <div>Other: {wineDB[grape].possibleFlavors.others.map((other) => <div\n      onClick={() => updateOtherFlavors(other)}\n      className={otherFlavors[other] === other ? 'toggled__flavor' : ''}>{other}</div>)}\n    </div>\n\n    <button onClick={() => console.log(fruitFlavors)}>show fruit flavors</button>\n  </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}