{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlackCheckbox = withStyles({\n  root: {\n    color: 'black',\n    '&$checked': {\n      color: 'black'\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 15\n}, this));\nexport default function DominantFlavors({\n  flavors,\n  grape,\n  wineDB\n}) {\n  _s();\n\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: false,\n    checkedD: true\n  });\n\n  const handleChange = event => {\n    console.log(event.target.defaultValue);\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  function handleCheckBox(taste) {\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(BlackCheckbox, {\n          value: taste,\n          checked: state.checkedC,\n          onChange: handleChange,\n          name: taste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this),\n        label: taste\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"possible flavors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Fruits: \", wineDB[grape].possibleFlavors.fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => console.log(fruit),\n        children: handleCheckBox(fruit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 71\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Dry Fruits: \", wineDB[grape].possibleFlavors.dryFruits.map(dryFruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dryFruit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 81\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Floral: \", wineDB[grape].possibleFlavors.florals.map(floral => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: floral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 73\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Herbs: \", wineDB[grape].possibleFlavors.herbs.map(herb => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: herb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 68\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Spices: \", wineDB[grape].possibleFlavors.spices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: spice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 71\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Earth: \", wineDB[grape].possibleFlavors.earthFlavors.map(earthFlavor => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: earthFlavor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 82\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Other: \", wineDB[grape].possibleFlavors.others.map(other => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 70\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(wineDB[grape].possibleFlavors.fruits),\n      children: \"show state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }, this);\n}\n\n_s(DominantFlavors, \"vZyAGW4zokwoXkige9XXbp1mIp8=\");\n\n_c = DominantFlavors;\n\nvar _c;\n\n$RefreshReg$(_c, \"DominantFlavors\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js"],"names":["useState","withStyles","FormGroup","FormControlLabel","Checkbox","BlackCheckbox","root","color","checked","props","DominantFlavors","flavors","grape","wineDB","state","setState","checkedA","checkedB","checkedC","checkedD","handleChange","event","console","log","target","defaultValue","name","handleCheckBox","taste","possibleFlavors","fruits","map","fruit","dryFruits","dryFruit","florals","floral","herbs","herb","spices","spice","earthFlavors","earthFlavor","others","other"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst BlackCheckbox = withStyles({\n  root: {\n    color: 'black',\n    '&$checked': {\n      color: 'black',\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function DominantFlavors({ flavors, grape, wineDB }) {\n\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true,\n    checkedC: false,\n    checkedD: true,\n  });\n\n  const handleChange = (event) => {\n    console.log(event.target.defaultValue)\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  function handleCheckBox(taste) {\n    return (<FormGroup row>\n      <FormControlLabel\n        control={\n          <BlackCheckbox\n            value={taste}\n            checked={state.checkedC}\n            onChange={handleChange}\n            name={taste} />}\n        label={taste}\n      />\n    </FormGroup>)\n  }\n\n  return (<div>\n\n    <div><h2>possible flavors</h2></div>\n    <div>Fruits: {wineDB[grape].possibleFlavors.fruits.map((fruit) => <div onClick={() => console.log(fruit)}>{handleCheckBox(fruit)}</div>)}</div>\n    <div>Dry Fruits: {wineDB[grape].possibleFlavors.dryFruits.map((dryFruit) => <div>{dryFruit}</div>)}</div>\n    <div>Floral: {wineDB[grape].possibleFlavors.florals.map((floral) => <div>{floral}</div>)}</div>\n    <div>Herbs: {wineDB[grape].possibleFlavors.herbs.map((herb) => <div>{herb}</div>)}</div>\n    <div>Spices: {wineDB[grape].possibleFlavors.spices.map((spice) => <div>{spice}</div>)}</div>\n    <div>Earth: {wineDB[grape].possibleFlavors.earthFlavors.map((earthFlavor) => <div>{earthFlavor}</div>)}</div>\n    <div>Other: {wineDB[grape].possibleFlavors.others.map((other) => <div>{other}</div>)}</div>\n\n    <button onClick={() => console.log(wineDB[grape].possibleFlavors.fruits)}>show state</button>\n  </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}