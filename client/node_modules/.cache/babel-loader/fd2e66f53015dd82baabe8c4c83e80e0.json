{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/client/src/Components/wineFlavors/PossibleFlavors.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PossibleFlavors({\n  updatePossibleFlavors,\n  grape,\n  wineDB\n}) {\n  _s();\n\n  const [fruitFlavors, setFruitFlavors] = useState({});\n  const [dryFruitFlavors, setDryFruitFlavors] = useState({});\n  const [floralFlavors, setFloralFlavors] = useState({});\n  const [herbalFlavors, setHerbalFlavors] = useState({});\n  const [spiceFlavors, setSpiceFlavors] = useState({});\n  const [earthFlavors, setEarthFlavors] = useState({});\n  const [otherFlavors, setOtherFlavors] = useState({}); // function updatePossibleFlavors(flavor) {\n  //   if (fruitFlavors[flavor] === flavor) {\n  //     delete fruitFlavors[flavor]\n  //     setFruitFlavors(prev => ({\n  //       ...prev\n  //     }))\n  //   } else {\n  //     setFruitFlavors(prev => ({\n  //       ...prev,\n  //       [flavor]: flavor\n  //     }))\n  //   }\n  // }\n\n  function updateFruitFlavors(fruit) {\n    if (fruitFlavors[fruit] === fruit) {\n      delete fruitFlavors[fruit];\n      setFruitFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setFruitFlavors(prev => ({ ...prev,\n        [fruit]: fruit\n      }));\n    }\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    if (dryFruitFlavors[dryFruit] === dryFruit) {\n      delete dryFruitFlavors[dryFruit];\n      setDryFruitFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setDryFruitFlavors(prev => ({ ...prev,\n        [dryFruit]: dryFruit\n      }));\n    }\n  }\n\n  function updateFloralFlavors(floral) {\n    if (floralFlavors[floral] === floral) {\n      delete floralFlavors[floral];\n      setFloralFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setFloralFlavors(prev => ({ ...prev,\n        [floral]: floral\n      }));\n    }\n  }\n\n  function updateHerbalFlavors(herbal) {\n    if (herbalFlavors[herbal] === herbal) {\n      delete herbalFlavors[herbal];\n      setHerbalFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setHerbalFlavors(prev => ({ ...prev,\n        [herbal]: herbal\n      }));\n    }\n  }\n\n  function updateSpiceFlavors(spice) {\n    if (spiceFlavors[spice] === spice) {\n      delete spiceFlavors[spice];\n      setSpiceFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setSpiceFlavors(prev => ({ ...prev,\n        [spice]: spice\n      }));\n    }\n  }\n\n  function updateEarthFlavors(earth) {\n    if (earthFlavors[earth] === earth) {\n      delete earthFlavors[earth];\n      setEarthFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setEarthFlavors(prev => ({ ...prev,\n        [earth]: earth\n      }));\n    }\n  }\n\n  function updateOtherFlavors(other) {\n    if (otherFlavors[other] === other) {\n      delete otherFlavors[other];\n      setOtherFlavors(prev => ({ ...prev\n      }));\n    } else {\n      setOtherFlavors(prev => ({ ...prev,\n        [other]: other\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered__container__possible__flavors\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"possible__flavor__headline\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"possible flavors in \", grape]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"possible__flavors\",\n          children: [wineDB[grape].possibleFlavors.fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateFruitFlavors(fruit),\n            className: (fruitFlavors[fruit] === fruit ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"fruit\",\n              children: \"fruit flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 103\n            }, this), fruit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 62\n          }, this)), wineDB[grape].possibleFlavors.dryFruits.map(dryFruit => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateDryFruitFlavors(dryFruit),\n            className: (dryFruitFlavors[dryFruit] === dryFruit ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"dry__fruit\",\n              children: \"dry fruit flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 111\n            }, this), dryFruit]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 68\n          }, this)), wineDB[grape].possibleFlavors.florals.map(floral => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateFloralFlavors(floral),\n            className: (floralFlavors[floral] === floral ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"floral\",\n              children: \"floral flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 105\n            }, this), floral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 64\n          }, this)), wineDB[grape].possibleFlavors.herbs.map(herb => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateHerbalFlavors(herb),\n            className: (herbalFlavors[herb] === herb ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"herbal\",\n              children: \"herbal flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 101\n            }, this), herb]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 60\n          }, this)), wineDB[grape].possibleFlavors.spices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateSpiceFlavors(spice),\n            className: (spiceFlavors[spice] === spice ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"spice\",\n              children: \"spice flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 102\n            }, this), spice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 62\n          }, this)), wineDB[grape].possibleFlavors.earthFlavors.map(earthFlavor => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateEarthFlavors(earthFlavor),\n            className: (earthFlavors[earthFlavor] === earthFlavor ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"earth\",\n              children: \"eath flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 114\n            }, this), earthFlavor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 74\n          }, this)), wineDB[grape].possibleFlavors.others.map(other => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => updateOtherFlavors(other),\n            className: (otherFlavors[other] === other ? 'toggled__flavor__box' : '') + ' flavor__box',\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"other\",\n              children: \"other flavor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 102\n            }, this), other]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 62\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => //allFlavorsInOneObject()\n          updatePossibleFlavors({\n            fruitFlavors,\n            dryFruitFlavors,\n            floralFlavors,\n            herbalFlavors,\n            spiceFlavors,\n            earthFlavors,\n            otherFlavors,\n            ratingCompleted: true\n          }),\n          className: \"possible__flavors__button\",\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 11\n  }, this);\n}\n\n_s(PossibleFlavors, \"WyUWltKkkPDDWtdmykxjnRwn2b4=\");\n\n_c = PossibleFlavors;\n\nvar _c;\n\n$RefreshReg$(_c, \"PossibleFlavors\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/client/src/Components/wineFlavors/PossibleFlavors.js"],"names":["useState","PossibleFlavors","updatePossibleFlavors","grape","wineDB","fruitFlavors","setFruitFlavors","dryFruitFlavors","setDryFruitFlavors","floralFlavors","setFloralFlavors","herbalFlavors","setHerbalFlavors","spiceFlavors","setSpiceFlavors","earthFlavors","setEarthFlavors","otherFlavors","setOtherFlavors","updateFruitFlavors","fruit","prev","updateDryFruitFlavors","dryFruit","updateFloralFlavors","floral","updateHerbalFlavors","herbal","updateSpiceFlavors","spice","updateEarthFlavors","earth","updateOtherFlavors","other","possibleFlavors","fruits","map","dryFruits","florals","herbs","herb","spices","earthFlavor","others","ratingCompleted"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAzB,EAAmE;AAAA;;AAGhF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD,CATgF,CAWhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASmB,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIf,YAAY,CAACe,KAAD,CAAZ,KAAwBA,KAA5B,EAAmC;AACjC,aAAOf,YAAY,CAACe,KAAD,CAAnB;AACAd,MAAAA,eAAe,CAACe,IAAI,KAAK,EACvB,GAAGA;AADoB,OAAL,CAAL,CAAf;AAGD,KALD,MAKO;AACLf,MAAAA,eAAe,CAACe,IAAI,KAAK,EACvB,GAAGA,IADoB;AAEvB,SAACD,KAAD,GAASA;AAFc,OAAL,CAAL,CAAf;AAID;AACF;;AAED,WAASE,qBAAT,CAA+BC,QAA/B,EAAyC;AACvC,QAAIhB,eAAe,CAACgB,QAAD,CAAf,KAA8BA,QAAlC,EAA4C;AAC1C,aAAOhB,eAAe,CAACgB,QAAD,CAAtB;AACAf,MAAAA,kBAAkB,CAACa,IAAI,KAAK,EAC1B,GAAGA;AADuB,OAAL,CAAL,CAAlB;AAGD,KALD,MAKO;AACLb,MAAAA,kBAAkB,CAACa,IAAI,KAAK,EAC1B,GAAGA,IADuB;AAE1B,SAACE,QAAD,GAAYA;AAFc,OAAL,CAAL,CAAlB;AAID;AACF;;AAED,WAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,QAAIhB,aAAa,CAACgB,MAAD,CAAb,KAA0BA,MAA9B,EAAsC;AACpC,aAAOhB,aAAa,CAACgB,MAAD,CAApB;AACAf,MAAAA,gBAAgB,CAACW,IAAI,KAAK,EACxB,GAAGA;AADqB,OAAL,CAAL,CAAhB;AAGD,KALD,MAKO;AACLX,MAAAA,gBAAgB,CAACW,IAAI,KAAK,EACxB,GAAGA,IADqB;AAExB,SAACI,MAAD,GAAUA;AAFc,OAAL,CAAL,CAAhB;AAID;AACF;;AAED,WAASC,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,QAAIhB,aAAa,CAACgB,MAAD,CAAb,KAA0BA,MAA9B,EAAsC;AACpC,aAAOhB,aAAa,CAACgB,MAAD,CAApB;AACAf,MAAAA,gBAAgB,CAACS,IAAI,KAAK,EACxB,GAAGA;AADqB,OAAL,CAAL,CAAhB;AAGD,KALD,MAKO;AACLT,MAAAA,gBAAgB,CAACS,IAAI,KAAK,EACxB,GAAGA,IADqB;AAExB,SAACM,MAAD,GAAUA;AAFc,OAAL,CAAL,CAAhB;AAID;AACF;;AAED,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIhB,YAAY,CAACgB,KAAD,CAAZ,KAAwBA,KAA5B,EAAmC;AACjC,aAAOhB,YAAY,CAACgB,KAAD,CAAnB;AACAf,MAAAA,eAAe,CAACO,IAAI,KAAK,EACvB,GAAGA;AADoB,OAAL,CAAL,CAAf;AAGD,KALD,MAKO;AACLP,MAAAA,eAAe,CAACO,IAAI,KAAK,EACvB,GAAGA,IADoB;AAEvB,SAACQ,KAAD,GAASA;AAFc,OAAL,CAAL,CAAf;AAID;AACF;;AAED,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIhB,YAAY,CAACgB,KAAD,CAAZ,KAAwBA,KAA5B,EAAmC;AACjC,aAAOhB,YAAY,CAACgB,KAAD,CAAnB;AACAf,MAAAA,eAAe,CAACK,IAAI,KAAK,EACvB,GAAGA;AADoB,OAAL,CAAL,CAAf;AAGD,KALD,MAKO;AACLL,MAAAA,eAAe,CAACK,IAAI,KAAK,EACvB,GAAGA,IADoB;AAEvB,SAACU,KAAD,GAASA;AAFc,OAAL,CAAL,CAAf;AAID;AACF;;AAED,WAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAIhB,YAAY,CAACgB,KAAD,CAAZ,KAAwBA,KAA5B,EAAmC;AACjC,aAAOhB,YAAY,CAACgB,KAAD,CAAnB;AACAf,MAAAA,eAAe,CAACG,IAAI,KAAK,EACvB,GAAGA;AADoB,OAAL,CAAL,CAAf;AAGD,KALD,MAKO;AACLH,MAAAA,eAAe,CAACG,IAAI,KAAK,EACvB,GAAGA,IADoB;AAEvB,SAACY,KAAD,GAASA;AAFc,OAAL,CAAL,CAAf;AAID;AACF;;AAED,sBAAQ;AAAA,2BAEN;AAAK,MAAA,SAAS,EAAE,wCAAhB;AAAA,6BACA;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,4BAAhB;AAAA,iCACE;AAAA,+CAAyB9B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,qBAGGC,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BC,MAA9B,CAAqCC,GAArC,CAA0ChB,KAAD,iBAAW;AACnD,YAAA,OAAO,EAAE,MAAMD,kBAAkB,CAACC,KAAD,CADkB;AAEnD,YAAA,SAAS,EAAE,CAACf,YAAY,CAACe,KAAD,CAAZ,KAAwBA,KAAxB,GAAgC,sBAAhC,GAAyD,EAA1D,IAAgE,cAFxB;AAAA,oCAEyC;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFzC,EAEiFA,KAFjF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApD,CAHH,EAOGhB,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BG,SAA9B,CAAwCD,GAAxC,CAA6Cb,QAAD,iBAAc;AACzD,YAAA,OAAO,EAAE,MAAMD,qBAAqB,CAACC,QAAD,CADqB;AAEzD,YAAA,SAAS,EAAE,CAAChB,eAAe,CAACgB,QAAD,CAAf,KAA8BA,QAA9B,GAAyC,sBAAzC,GAAkE,EAAnE,IAAyE,cAF3B;AAAA,oCAE2C;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAF3C,EAE4FA,QAF5F;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA1D,CAPH,EAWGnB,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BI,OAA9B,CAAsCF,GAAtC,CAA2CX,MAAD,iBAAY;AACrD,YAAA,OAAO,EAAE,MAAMD,mBAAmB,CAACC,MAAD,CADmB;AAErD,YAAA,SAAS,EAAE,CAAChB,aAAa,CAACgB,MAAD,CAAb,KAA0BA,MAA1B,GAAmC,sBAAnC,GAA4D,EAA7D,IAAmE,cAFzB;AAAA,oCAEyC;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFzC,EAEmFA,MAFnF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtD,CAXH,EAeGrB,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BK,KAA9B,CAAoCH,GAApC,CAAyCI,IAAD,iBAAU;AACjD,YAAA,OAAO,EAAE,MAAMd,mBAAmB,CAACc,IAAD,CADe;AAEjD,YAAA,SAAS,EAAE,CAAC7B,aAAa,CAAC6B,IAAD,CAAb,KAAwBA,IAAxB,GAA+B,sBAA/B,GAAwD,EAAzD,IAA+D,cAFzB;AAAA,oCAEyC;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFzC,EAEmFA,IAFnF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlD,CAfH,EAmBGpC,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BO,MAA9B,CAAqCL,GAArC,CAA0CP,KAAD,iBAAW;AACnD,YAAA,OAAO,EAAE,MAAMD,kBAAkB,CAACC,KAAD,CADkB;AAEnD,YAAA,SAAS,EAAE,CAAChB,YAAY,CAACgB,KAAD,CAAZ,KAAwBA,KAAxB,GAAgC,sBAAhC,GAAyD,EAA1D,IAAgE,cAFxB;AAAA,oCAEwC;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFxC,EAEgFA,KAFhF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApD,CAnBH,EAuBGzB,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BnB,YAA9B,CAA2CqB,GAA3C,CAAgDM,WAAD,iBAAiB;AAC/D,YAAA,OAAO,EAAE,MAAMZ,kBAAkB,CAACY,WAAD,CAD8B;AAE/D,YAAA,SAAS,EAAE,CAAC3B,YAAY,CAAC2B,WAAD,CAAZ,KAA8BA,WAA9B,GAA4C,sBAA5C,GAAqE,EAAtE,IAA4E,cAFxB;AAAA,oCAEwC;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFxC,EAE+EA,WAF/E;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhE,CAvBH,EA2BGtC,MAAM,CAACD,KAAD,CAAN,CAAc+B,eAAd,CAA8BS,MAA9B,CAAqCP,GAArC,CAA0CH,KAAD,iBAAW;AACnD,YAAA,OAAO,EAAE,MAAMD,kBAAkB,CAACC,KAAD,CADkB;AAEnD,YAAA,SAAS,EAAE,CAAChB,YAAY,CAACgB,KAAD,CAAZ,KAAwBA,KAAxB,GAAgC,sBAAhC,GAAyD,EAA1D,IAAgE,cAFxB;AAAA,oCAEwC;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFxC,EAEgFA,KAFhF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAApD,CA3BH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eA+EE;AAAQ,UAAA,OAAO,EAAE,MACf;AACA/B,UAAAA,qBAAqB,CAAC;AAAEG,YAAAA,YAAF;AAAgBE,YAAAA,eAAhB;AAAiCE,YAAAA,aAAjC;AAAgDE,YAAAA,aAAhD;AAA+DE,YAAAA,YAA/D;AAA6EE,YAAAA,YAA7E;AAA2FE,YAAAA,YAA3F;AAAyG2B,YAAAA,eAAe,EAAE;AAA1H,WAAD,CAFvB;AAGE,UAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFM;AAAA;AAAA;AAAA;AAAA,UAAR;AA2FD;;GAtNuB3C,e;;KAAAA,e","sourcesContent":["import { useState } from 'react';\n\nexport default function PossibleFlavors({ updatePossibleFlavors, grape, wineDB }) {\n\n\n  const [fruitFlavors, setFruitFlavors] = useState({});\n  const [dryFruitFlavors, setDryFruitFlavors] = useState({});\n  const [floralFlavors, setFloralFlavors] = useState({});\n  const [herbalFlavors, setHerbalFlavors] = useState({});\n  const [spiceFlavors, setSpiceFlavors] = useState({});\n  const [earthFlavors, setEarthFlavors] = useState({});\n  const [otherFlavors, setOtherFlavors] = useState({});\n\n  // function updatePossibleFlavors(flavor) {\n  //   if (fruitFlavors[flavor] === flavor) {\n  //     delete fruitFlavors[flavor]\n  //     setFruitFlavors(prev => ({\n  //       ...prev\n  //     }))\n  //   } else {\n  //     setFruitFlavors(prev => ({\n  //       ...prev,\n  //       [flavor]: flavor\n  //     }))\n  //   }\n  // }\n\n  function updateFruitFlavors(fruit) {\n    if (fruitFlavors[fruit] === fruit) {\n      delete fruitFlavors[fruit]\n      setFruitFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setFruitFlavors(prev => ({\n        ...prev,\n        [fruit]: fruit\n      }))\n    }\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    if (dryFruitFlavors[dryFruit] === dryFruit) {\n      delete dryFruitFlavors[dryFruit]\n      setDryFruitFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setDryFruitFlavors(prev => ({\n        ...prev,\n        [dryFruit]: dryFruit\n      }))\n    }\n  }\n\n  function updateFloralFlavors(floral) {\n    if (floralFlavors[floral] === floral) {\n      delete floralFlavors[floral]\n      setFloralFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setFloralFlavors(prev => ({\n        ...prev,\n        [floral]: floral\n      }))\n    }\n  }\n\n  function updateHerbalFlavors(herbal) {\n    if (herbalFlavors[herbal] === herbal) {\n      delete herbalFlavors[herbal]\n      setHerbalFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setHerbalFlavors(prev => ({\n        ...prev,\n        [herbal]: herbal\n      }))\n    }\n  }\n\n  function updateSpiceFlavors(spice) {\n    if (spiceFlavors[spice] === spice) {\n      delete spiceFlavors[spice]\n      setSpiceFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setSpiceFlavors(prev => ({\n        ...prev,\n        [spice]: spice\n      }))\n    }\n  }\n\n  function updateEarthFlavors(earth) {\n    if (earthFlavors[earth] === earth) {\n      delete earthFlavors[earth]\n      setEarthFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setEarthFlavors(prev => ({\n        ...prev,\n        [earth]: earth\n      }))\n    }\n  }\n\n  function updateOtherFlavors(other) {\n    if (otherFlavors[other] === other) {\n      delete otherFlavors[other]\n      setOtherFlavors(prev => ({\n        ...prev\n      }))\n    } else {\n      setOtherFlavors(prev => ({\n        ...prev,\n        [other]: other\n      }))\n    }\n  }\n\n  return (<div>\n\n    <div className={\"centered__container__possible__flavors\"}>\n    <div>\n      <span className='possible__flavor__headline'>\n        <h2>possible flavors in {grape}</h2>\n      </span>\n\n      {/* <div className='possible__flavors__container'> */}\n      {/* <h3>Fruits Flavors</h3> */}\n      <div className='possible__flavors'>\n        {/* <button onClick={() => console.log(possibleFlavorsArray)}>showpossible flavors</button> */}\n\n        {wineDB[grape].possibleFlavors.fruits.map((fruit) => <div\n          onClick={() => updateFruitFlavors(fruit)}\n          className={(fruitFlavors[fruit] === fruit ? 'toggled__flavor__box' : '') + ' flavor__box'} ><h6 className='fruit'>fruit flavor</h6>{fruit}</div>)}\n\n        {wineDB[grape].possibleFlavors.dryFruits.map((dryFruit) => <div\n          onClick={() => updateDryFruitFlavors(dryFruit)}\n          className={(dryFruitFlavors[dryFruit] === dryFruit ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='dry__fruit'>dry fruit flavor</h6>{dryFruit}</div>)}\n\n        {wineDB[grape].possibleFlavors.florals.map((floral) => <div\n          onClick={() => updateFloralFlavors(floral)}\n          className={(floralFlavors[floral] === floral ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='floral'>floral flavor</h6>{floral}</div>)}\n\n        {wineDB[grape].possibleFlavors.herbs.map((herb) => <div\n          onClick={() => updateHerbalFlavors(herb)}\n          className={(herbalFlavors[herb] === herb ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='herbal'>herbal flavor</h6>{herb}</div>)}\n\n        {wineDB[grape].possibleFlavors.spices.map((spice) => <div\n          onClick={() => updateSpiceFlavors(spice)}\n          className={(spiceFlavors[spice] === spice ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='spice'>spice flavor</h6>{spice}</div>)}\n\n        {wineDB[grape].possibleFlavors.earthFlavors.map((earthFlavor) => <div\n          onClick={() => updateEarthFlavors(earthFlavor)}\n          className={(earthFlavors[earthFlavor] === earthFlavor ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='earth'>eath flavor</h6>{earthFlavor}</div>)}\n\n        {wineDB[grape].possibleFlavors.others.map((other) => <div\n          onClick={() => updateOtherFlavors(other)}\n          className={(otherFlavors[other] === other ? 'toggled__flavor__box' : '') + ' flavor__box'}><h6 className='other'>other flavor</h6>{other}</div>)}\n      </div>\n\n      {/* <h3>Dry Fruits Flavors</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.dryFruits.map((dryFruit) => <div\n        onClick={() => updateDryFruitFlavors(dryFruit)}\n        className={(dryFruitFlavors[dryFruit] === dryFruit ? 'toggled__flavor' : '') + ' flavor__box'}>{dryFruit}</div>)}\n      </div> */}\n\n      {/* <h3>Flora Flavors:</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.florals.map((floral) => <div\n        onClick={() => updateFloralFlavors(floral)}\n        className={(floralFlavors[floral] === floral ? 'toggled__flavor' : '') + ' flavor__box'}>{floral}</div>)}\n      </div> */}\n\n      {/* <h3>Herbal Flavors</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.herbs.map((herb) => <div\n        onClick={() => updateHerbalFlavors(herb)}\n        className={(herbalFlavors[herb] === herb ? 'toggled__flavor' : '') + ' flavor__box'}>{herb}</div>)}\n      </div> */}\n\n      {/* <h3>Spice Flavors</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.spices.map((spice) => <div\n        onClick={() => updateSpiceFlavors(spice)}\n        className={(spiceFlavors[spice] === spice ? 'toggled__flavor' : '') + ' flavor__box'}>{spice}</div>)}\n      </div> */}\n\n      {/* <h3>Earthy Flavors</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.earthFlavors.map((earthFlavor) => <div\n        onClick={() => updateEarthFlavors(earthFlavor)}\n        className={(earthFlavors[earthFlavor] === earthFlavor ? 'toggled__flavor' : '') + ' flavor__box'}>{earthFlavor}</div>)}\n      </div> */}\n\n      {/* <h3>Other Flavors</h3> */}\n      {/* <div className='possible__flavors'>{wineDB[grape].possibleFlavors.others.map((other) => <div\n        onClick={() => updateOtherFlavors(other)}\n        className={(otherFlavors[other] === other ? 'toggled__flavor' : '') + ' flavor__box'}>{other}</div>)}\n      </div> */}\n\n\n\n      {/* <button onClick={() => console.log(fruitFlavors)}></button> */}\n\n      <button onClick={() =>\n        //allFlavorsInOneObject()\n        updatePossibleFlavors({ fruitFlavors, dryFruitFlavors, floralFlavors, herbalFlavors, spiceFlavors, earthFlavors, otherFlavors, ratingCompleted: true })}\n        className='possible__flavors__button'>next</button>\n    </div>\n  </div>\n  </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}