{"ast":null,"code":"var _jsxFileName = \"/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DominantFlavors({\n  flavors,\n  grape,\n  wineDB\n}) {\n  _s();\n\n  const [fruitFlavors, setFruitFlavors] = useState({\n    istoggled: false\n  });\n  const [dryFruitFlavors, setDryFruitFlavors] = useState([]);\n  const [floralFlavors, setFloralFlavors] = useState([]);\n  const [herbalFlavors, setHerbalFlavors] = useState([]);\n  const [spiceFlavors, setSpiceFlavors] = useState([]);\n  const [earthFlavors, setEarthFlavors] = useState([]);\n  const [otherFlavors, setOtherFlavors] = useState([]);\n\n  function updateFruitFlavors(fruit) {\n    // setFruitFlavors(prev => [...prev, fruit])\n    setFruitFlavors(prev => ({ ...prev,\n      [fruit]: fruit\n    }));\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    setDryFruitFlavors(prev => [...prev, dryFruit]);\n  }\n\n  function updateFloralFlavors(floral) {\n    setFloralFlavors(prev => [...prev, floral]);\n  }\n\n  function updateHerbalFlavors(herb) {\n    setHerbalFlavors(prev => [...prev, herb]);\n  }\n\n  function updateSpiceFlavors(spice) {\n    setSpiceFlavors(prev => [...prev, spice]);\n  }\n\n  function updateEarthFlavors(earthFlavor) {\n    setEarthFlavors(prev => [...prev, earthFlavor]);\n  }\n\n  function updateOtherFlavors(other) {\n    setOtherFlavors(prev => [...prev, other]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"possible flavors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Fruits: \", wineDB[grape].possibleFlavors.fruits.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateFruitFlavors(fruit),\n        className: fruitFlavors.isToggled ? 'toggled__flavor' : '',\n        children: fruit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 71\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Dry Fruits: \", wineDB[grape].possibleFlavors.dryFruits.map(dryFruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateDryFruitFlavors(dryFruit),\n        children: dryFruit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 81\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Floral: \", wineDB[grape].possibleFlavors.florals.map(floral => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateFloralFlavors(floral),\n        children: floral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 73\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Herbs: \", wineDB[grape].possibleFlavors.herbs.map(herb => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateHerbalFlavors(herb),\n        children: herb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 68\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Spices: \", wineDB[grape].possibleFlavors.spices.map(spice => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateSpiceFlavors(spice),\n        children: spice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 71\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Earth: \", wineDB[grape].possibleFlavors.earthFlavors.map(earthFlavor => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateEarthFlavors(earthFlavor),\n        children: earthFlavor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 82\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Other: \", wineDB[grape].possibleFlavors.others.map(other => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => updateOtherFlavors(other),\n        children: other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 70\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(fruitFlavors, dryFruitFlavors, floralFlavors, herbalFlavors, spiceFlavors, earthFlavors, otherFlavors),\n      children: \"show state\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 11\n  }, this);\n}\n\n_s(DominantFlavors, \"sCa1Bs7Lk2K8p/a/aOPiUEzvVuk=\");\n\n_c = DominantFlavors;\n\nvar _c;\n\n$RefreshReg$(_c, \"DominantFlavors\");","map":{"version":3,"sources":["/Users/maxdraguhn/Documents/REACT-TUTORIAL/wine-form/src/DominantFlavors.js"],"names":["useState","DominantFlavors","flavors","grape","wineDB","fruitFlavors","setFruitFlavors","istoggled","dryFruitFlavors","setDryFruitFlavors","floralFlavors","setFloralFlavors","herbalFlavors","setHerbalFlavors","spiceFlavors","setSpiceFlavors","earthFlavors","setEarthFlavors","otherFlavors","setOtherFlavors","updateFruitFlavors","fruit","prev","updateDryFruitFlavors","dryFruit","updateFloralFlavors","floral","updateHerbalFlavors","herb","updateSpiceFlavors","spice","updateEarthFlavors","earthFlavor","updateOtherFlavors","other","possibleFlavors","fruits","map","isToggled","dryFruits","florals","herbs","spices","others","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nexport default function DominantFlavors({ flavors, grape, wineDB }) {\n\n  const [fruitFlavors, setFruitFlavors] = useState({istoggled: false})\n  const [dryFruitFlavors, setDryFruitFlavors] = useState([])\n  const [floralFlavors, setFloralFlavors] = useState([])\n  const [herbalFlavors, setHerbalFlavors] = useState([])\n  const [spiceFlavors, setSpiceFlavors] = useState([])\n  const [earthFlavors, setEarthFlavors] = useState([])\n  const [otherFlavors, setOtherFlavors] = useState([])\n\n  function updateFruitFlavors(fruit) {\n    // setFruitFlavors(prev => [...prev, fruit])\n    setFruitFlavors(prev => ({\n      ...prev,\n    [fruit]: fruit}))\n  }\n\n  function updateDryFruitFlavors(dryFruit) {\n    setDryFruitFlavors(prev => [...prev, dryFruit])\n  }\n\n  function updateFloralFlavors(floral) {\n    setFloralFlavors(prev => [...prev, floral])\n  }\n\n  function updateHerbalFlavors(herb) {\n    setHerbalFlavors(prev => [...prev, herb])\n  }\n\n  function updateSpiceFlavors(spice) {\n    setSpiceFlavors(prev => [...prev, spice])\n  }\n\n  function updateEarthFlavors(earthFlavor) {\n    setEarthFlavors(prev => [...prev, earthFlavor])\n  }\n\n  function updateOtherFlavors(other) {\n    setOtherFlavors(prev => [...prev, other])\n  }\n\n  return (<div>\n\n    <div><h2>possible flavors</h2></div>\n\n    <div>Fruits: {wineDB[grape].possibleFlavors.fruits.map((fruit) => <div onClick={() => updateFruitFlavors(fruit)} className={fruitFlavors.isToggled ? 'toggled__flavor' : ''}>{fruit}</div>)}</div>\n\n    <div>Dry Fruits: {wineDB[grape].possibleFlavors.dryFruits.map((dryFruit) => <div onClick={() => updateDryFruitFlavors(dryFruit)}>{dryFruit}</div>)}</div>\n\n    <div>Floral: {wineDB[grape].possibleFlavors.florals.map((floral) => <div onClick={() => updateFloralFlavors(floral)}>{floral}</div>)}</div>\n\n    <div>Herbs: {wineDB[grape].possibleFlavors.herbs.map((herb) => <div onClick={() => updateHerbalFlavors(herb)}>{herb}</div>)}</div>\n\n    <div>Spices: {wineDB[grape].possibleFlavors.spices.map((spice) => <div onClick={() => updateSpiceFlavors(spice)}>{spice}</div>)}</div>\n\n    <div>Earth: {wineDB[grape].possibleFlavors.earthFlavors.map((earthFlavor) => <div onClick={() => updateEarthFlavors(earthFlavor)}>{earthFlavor}</div>)}</div>\n\n    <div>Other: {wineDB[grape].possibleFlavors.others.map((other) => <div onClick={() => updateOtherFlavors(other)}>{other}</div>)}</div>\n\n    <button onClick={() => console.log(fruitFlavors, dryFruitFlavors, floralFlavors, herbalFlavors, spiceFlavors, earthFlavors, otherFlavors)}>show state</button>\n  </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}